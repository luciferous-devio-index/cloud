Transform: AWS::Serverless-2016-10-31

Parameters:
  LayerArnBase:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /LuciferousDevIoIndex/Layer/Base

  LayerArnFeedparser:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /LuciferousDevIoIndex/Layer/Feedparser

  LayerArnBs4:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /LuciferousDevIoIndex/Layer/Bs4

  BucketArtifacts:
    Type: String

Globals:
  Function:
    Runtime: python3.9
    Timeout: 180
    MemorySize: 256
    CodeUri: src
    Layers:
      - !Ref LayerArnBase

Resources:
  TopicAlarm:
    Type: AWS::SNS::Topic

  TableListPostId:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: post_id
          AttributeType: S
      KeySchema:
        - AttributeName: post_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: KEYS_ONLY

  QueueGetPost:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 180

  RoleDynamoDbToSqs:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: pipes.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: pipe-dynamodb-to-sqs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DescribeStream
                  - dynamodb:GetRecords
                  - dynamodb:GetShardIterator
                  - dynamodb:ListStreams
                Resource:
                  - !GetAtt TableListPostId.StreamArn
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                Resource:
                  - !GetAtt QueueGetPost.Arn

  PipeDynamoDbToSqs:
    Type: AWS::Pipes::Pipe
    Properties:
      RoleArn: !GetAtt RoleDynamoDbToSqs.Arn
      Source: !GetAtt TableListPostId.StreamArn
      SourceParameters:
        DynamoDBStreamParameters:
          StartingPosition: TRIM_HORIZON
      Target: !GetAtt QueueGetPost.Arn

  BucketDevioData:
    Type: AWS::S3::Bucket

  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Ref BucketDevioData
        SigningProtocol: sigv4
        SigningBehavior: always
        OriginAccessControlOriginType: s3

  CloudFrontFunctionIndex:
    Type: AWS::CloudFront::Function
    Properties:
      FunctionConfig:
        Comment: ''
        Runtime: cloudfront-js-1.0
      AutoPublish: true
      Name: !Sub
        - index-get-${UniqueId}
        - UniqueId: !Select [0, !Split ['-', !Select [2, !Split [/, !Ref 'AWS::StackId']]]]
      FunctionCode: |
        function handler(event) {
          var request = event.request;
          var uri = request.uri;

          // Check whether the URI is missing a file name.
          if (uri.endsWith('/')) {
            request.uri += 'index.html';
          }
            // Check whether the URI is missing a file extension.
            else if (!uri.includes('.')) {
            request.uri += '/index.html';
          }

          return request;
        }

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultRootObject: index.html
        Origins:
          - Id: !GetAtt BucketDevioData.RegionalDomainName
            OriginAccessControlId: !GetAtt OriginAccessControl.Id
            DomainName: !GetAtt BucketDevioData.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: ""
        DefaultCacheBehavior:
          TargetOriginId: !GetAtt BucketDevioData.RegionalDomainName
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - HEAD
            - GET
          CachedMethods:
            - HEAD
            - GET
          Compress: true
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !GetAtt CloudFrontFunctionIndex.FunctionARN
        PriceClass: PriceClass_All
        Enabled: true
        HttpVersion: http2and3
        IPV6Enabled: true

  PolicyBucketDevioData:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BucketDevioData
      PolicyDocument:
        Version: 2008-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub ${BucketDevioData.Arn}/*
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${Distribution}

  BucketSitemapData:
    Type: AWS::S3::Bucket

  FunctionDevioDownloader:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - arm64
      AutoPublishAlias: prd
      Environment:
        Variables:
          S3_BUCKET: !Ref BucketDevioData
          S3_PREFIX: posts
          URL_DEVIO_POSTS: https://dev.classmethod.jp/wp-json/wp/v2/posts
      Events:
        SQS:
          Type: SQS
          Properties:
            BatchSize: 1
            Enabled: true
            Queue: !GetAtt QueueGetPost.Arn
      Handler: luciferous_devio_index/lambda_handler/devio_downloader.handler
      Policies:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      ReservedConcurrentExecutions: 3

  LogStackDevioDownloader:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: log.yml
      Parameters:
        FunctionName: !Ref FunctionDevioDownloader
        FunctionArnErrorNotificator: !GetAtt FunctionErrorNotificator.Arn

  FunctionFeedDispatcher:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - arm64
      AutoPublishAlias: prd
      Environment:
        Variables:
          URL_FEED: https://dev.classmethod.jp/feed
          DDB_TABLE_NAME: !Ref TableListPostId
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Enabled: true
            Schedule: rate(5 minutes)
      Handler: luciferous_devio_index/lambda_handler/feed_dispatcher.handler
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      Layers:
        - !Ref LayerArnFeedparser

  LogStackFeedDispatcher:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: log.yml
      Parameters:
        FunctionName: !Ref FunctionFeedDispatcher
        FunctionArnErrorNotificator: !GetAtt FunctionErrorNotificator.Arn

  FunctionErrorNotificator:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - arm64
      Handler: luciferous_devio_index/lambda_handler/error_notificator.handler
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: "*"
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess

  LogErrorNotificator:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${FunctionErrorNotificator}

  PermissionErrorNotificator:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt FunctionErrorNotificator.Arn
      Action: lambda:InvokeFunction
      Principal: logs.amazonaws.com
      SourceArn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*

  AlarmErrorNotificator:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref TopicAlarm
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Dimensions:
        - Name: FunctionName
          Value: !Ref FunctionErrorNotificator
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0.0
      TreatMissingData: notBreaching

  FunctionSitemapDownloader:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - arm64
      AutoPublishAlias: prd
      Timeout: 600
      Environment:
        Variables:
          S3_BUCKET: !Ref BucketSitemapData
          S3_PREFIX: sitemap
          SITEMAP_URL: https://dev.classmethod.jp/sitemap.xml
      Handler: luciferous_devio_index/lambda_handler/sitemap_downloader.handler
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Enabled: true
            Schedule: rate(1 day)
      Policies:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Layers:
        - !Ref LayerArnBs4

  LogStackSitemapDownloader:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: log.yml
      Parameters:
        FunctionName: !Ref FunctionSitemapDownloader
        FunctionArnErrorNotificator: !GetAtt FunctionErrorNotificator.Arn

  RoleGlueJob:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: glue.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: decrypt
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource: "*"
        - PolicyName: s3-put
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: "*"

  JobPackagePosts:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: pythonshell
        PythonVersion: "3.9"
        ScriptLocation: src/luciferous_devio_index/glue_job/package_posts.py
      DefaultArguments:
        --s3-bucket: !Ref BucketDevioData
        --s3-posts-prefix: posts
        --s3-archives-prefix: archives
        library-set: none
        --extra-py-files: !Sub s3://${BucketArtifacts}/whl_cloud/luciferous_devio_index-0.1.0-py3-none-any.whl
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: "3.0"
      MaxCapacity: 0.0625
      Role: !GetAtt RoleGlueJob.Arn

Outputs:
  DomainName:
    Value: !GetAtt Distribution.DomainName