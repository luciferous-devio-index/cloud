Parameters:
  FunctionName:
    Type: String

  FunctionArnErrorNotificator:
    Type: String

Resources:
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${FunctionName}

  SubscriptionFilterError:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref FunctionArnErrorNotificator
      FilterPattern: "{ $.levelname = \"ERROR\" }"
      LogGroupName: !Ref LogGroup

  SubscriptionFilterNotErrorFinish:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref FunctionArnErrorNotificator
      FilterPattern: "?\"Task timed out after\" ?\"Process exited before completing request\""
      LogGroupName: !Ref LogGroup
